version: 2.1
workflows:
  version: 2.1
  build-push:
    jobs:
      - build:
          context:
            - aws-config

jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - install-aws-venv
      - setup_remote_docker:
          docker_layer_caching: true
      - setup-env-variables
      - build-docker-image
      - push-docker-image

commands:
  install-aws-venv:
    description: "Install AWS in venv"
    steps:
      - run:
          name: Install awscli
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install awscli>=1.15.5

  setup-env-variables:
    description: "Setup common environment variables"
    steps:
      - run:
          name: Setup ENV Variables
          command: |
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/dolly/geo2tz:${CIRCLE_BRANCH}-${CIRCLE_SHA1}"' >> $BASH_ENV

  build-docker-image:
    description: "Build Docker Image"
    steps:
      - run:
          name: Build Docker Image
          command: |
            docker build -t $FULL_IMAGE_NAME .
# GIT_DESCR = $(shell git describe --tags --always)
# docker build --build-arg DOCKER_TAG='$(GIT_DESCR)' -t $(DOCKER_IMAGE)  .

  push-docker-image:
    description: "Push Docker Image"
    steps:
      - run:
          name: Push image
          command: |
            . venv/bin/activate
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME
            #Add tag for shared repo
            export FULL_IMAGE_NAME_SHARED="${AWS_ACCOUNT_ID_SHARED}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/geo2tz:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:6}-$(date +%s)"
            docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/dolly/geo2tz:$CIRCLE_BRANCH-$CIRCLE_SHA1 ${FULL_IMAGE_NAME_SHARED}
            #Assume role to push to shared account
            export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
            $(aws sts assume-role \
            --role-arn arn:aws:iam::$AWS_ACCOUNT_ID_SHARED:role/OrganizationAccountAdminAccessRole 
            --role-session-name Session \
            --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
            --output text))
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME_SHARED
